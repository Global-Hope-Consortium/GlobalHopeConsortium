services:
  postgres:
    image: postgres:14-alpine
    container_name: postgres-db
    environment:
      POSTGRES_DB: ghc_db
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - global-net
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
        interval: 10s
        timeout: 5s
        retries: 5

  server:
    build: ./server
    container_name: springboot-app
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ghc_db
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_PROFILES_ACTIVE: default
  
    networks:
      - global-net

  client:
    build: ./client
    container_name: react-app
    ports:
      - "3000:3000"
    networks:
      - global-net

volumes:
  pgdata:

networks:
  global-net: